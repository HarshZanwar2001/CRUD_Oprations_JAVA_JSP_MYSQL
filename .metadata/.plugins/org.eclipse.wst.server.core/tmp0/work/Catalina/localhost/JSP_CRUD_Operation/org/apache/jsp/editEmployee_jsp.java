/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-01 06:11:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.app.Dao.EmployeeDao;
import com.app.bean.Employee;

public final class editEmployee_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1732473099802L));
    _jspx_dependants.put("jar:file:/D:/Advanced_Java_Projects/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/JSP_CRUD_Operation/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664433678000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("com.app.Dao.EmployeeDao");
    _jspx_imports_classes.add("com.app.bean.Employee");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"ISO-8859-1\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Edit Employee</title>\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background-color: #f8f9fa;\r\n");
      out.write("        }\r\n");
      out.write("        .form-container {\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border: 2px solid black;\r\n");
      out.write("        }\r\n");
      out.write("        .form-header {\r\n");
      out.write("            background: #007bff;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 8px 8px 0 0;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
 
        int id = Integer.parseInt(request.getParameter("id"));
        Employee e = EmployeeDao.getEmployeeId(id);
    
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"form-container\">\r\n");
      out.write("            <div class=\"form-header\">\r\n");
      out.write("                <h3>Edit Employee</h3>\r\n");
      out.write("            </div>\r\n");
      out.write("            <form action=\"editEmp.jsp\" method=\"post\" class=\"p-3\">\r\n");
      out.write("                <input type=\"hidden\" name=\"id\" value=\"");
      out.print( e.getId() );
      out.write("\">\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"name\" class=\"form-label\">Name:</label>\r\n");
      out.write("                    <input type=\"text\" name=\"name\" id=\"name\" class=\"form-control\" value=\"");
      out.print( e.getName() );
      out.write("\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"password\" class=\"form-label\">Password:</label>\r\n");
      out.write("                    <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" value=\"");
      out.print( e.getPassword() );
      out.write("\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"email\" class=\"form-label\">Email-Id:</label>\r\n");
      out.write("                    <input type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" value=\"");
      out.print( e.getEmail() );
      out.write("\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label class=\"form-label\">Gender:</label>\r\n");
      out.write("                    <div class=\"form-check\">\r\n");
      out.write("                        <input type=\"radio\" name=\"gender\" value=\"Male\" id=\"male\" class=\"form-check-input\" \r\n");
      out.write("                               ");
      out.print( e.getGender().equalsIgnoreCase("male") ? "checked" : "" );
      out.write(" required>\r\n");
      out.write("                        <label for=\"male\" class=\"form-check-label\">Male</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-check\">\r\n");
      out.write("                        <input type=\"radio\" name=\"gender\" value=\"Female\" id=\"female\" class=\"form-check-input\" \r\n");
      out.write("                               ");
      out.print( e.getGender().equalsIgnoreCase("female") ? "checked" : "" );
      out.write(">\r\n");
      out.write("                        <label for=\"female\" class=\"form-check-label\">Female</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"mb-3\">\r\n");
      out.write("                    <label for=\"country\" class=\"form-label\">Country:</label>\r\n");
      out.write("                    <select name=\"country\" id=\"country\" class=\"form-select\" required>\r\n");
      out.write("                        <option ");
      out.print( e.getCountry().equals("India") ? "selected" : "" );
      out.write(">India</option>\r\n");
      out.write("                        <option ");
      out.print( e.getCountry().equals("USA") ? "selected" : "" );
      out.write(">USA</option>\r\n");
      out.write("                        <option ");
      out.print( e.getCountry().equals("France") ? "selected" : "" );
      out.write(">France</option>\r\n");
      out.write("                        <option ");
      out.print( e.getCountry().equals("Germany") ? "selected" : "" );
      out.write(">Germany</option>\r\n");
      out.write("                        <option ");
      out.print( e.getCountry().equals("Other") ? "selected" : "" );
      out.write(">Other</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"text-center\">\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary\">Save Changes</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- Bootstrap JS -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
